[2019-03-24 18:55:35] php.DEBUG: Warning: fsockopen(): unable to connect to 127.0.0.1:8000 (Une tentative de connexion a échoué car le parti connecté n’a pas répondu convenablement au-delà d’une certaine durée ou une connexion établie a échoué car l’hôte de connexion n’a pas répondu. ) {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\SilencedErrorContext: {\"severity\":2,\"file\":\"E:\\\\L3_MIAGE_S6\\\\tech_web_avancÃ©\\\\Yu-Gi-Oh\\\\vendor\\\\symfony\\\\web-server-bundle\\\\WebServerConfig.php\",\"line\":139,\"trace\":[{\"file\":\"E:\\\\L3_MIAGE_S6\\\\tech_web_avancÃ©\\\\Yu-Gi-Oh\\\\vendor\\\\symfony\\\\web-server-bundle\\\\WebServerConfig.php\",\"line\":54,\"function\":\"findBestPort\",\"class\":\"Symfony\\\\Bundle\\\\WebServerBundle\\\\WebServerConfig\",\"type\":\"->\"}],\"count\":1})"} []
[2019-03-24 18:55:36] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::home"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2019-03-24 18:55:36] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2019-03-24 18:55:37] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.password AS password_3, t0.email AS email_4, t0.admin AS admin_5 FROM user t0 WHERE t0.id = ? [1] []
[2019-03-24 18:55:37] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"anisanis"} []
[2019-03-24 18:55:37] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-03-24 18:55:37] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5104e8"},"request_uri":"http://127.0.0.1:8000/_wdt/5104e8","method":"GET"} []
[2019-03-24 18:55:40] request.INFO: Matched route "deckBuilder". {"route":"deckBuilder","route_parameters":{"_route":"deckBuilder","_controller":"App\\Controller\\DeckBuilderController::createDeck"},"request_uri":"http://127.0.0.1:8000/deckBuilder","method":"GET"} []
[2019-03-24 18:55:40] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2019-03-24 18:55:40] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.password AS password_3, t0.email AS email_4, t0.admin AS admin_5 FROM user t0 WHERE t0.id = ? [1] []
[2019-03-24 18:55:40] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"anisanis"} []
[2019-03-24 18:55:40] doctrine.DEBUG: SELECT t0.id AS id_1, t0.deck_name AS deck_name_2, t0.created_at AS created_at_3, t0.user_id AS user_id_4 FROM deck t0 [] []
[2019-03-24 18:55:40] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-03-24 18:55:40] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"30b2d2"},"request_uri":"http://127.0.0.1:8000/_wdt/30b2d2","method":"GET"} []
[2019-03-24 18:57:24] php.DEBUG: Warning: fsockopen(): unable to connect to 127.0.0.1:8000 (Une tentative de connexion a échoué car le parti connecté n’a pas répondu convenablement au-delà d’une certaine durée ou une connexion établie a échoué car l’hôte de connexion n’a pas répondu. ) {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\SilencedErrorContext: {\"severity\":2,\"file\":\"E:\\\\L3_MIAGE_S6\\\\tech_web_avancÃ©\\\\Yu-Gi-Oh\\\\vendor\\\\symfony\\\\web-server-bundle\\\\WebServerConfig.php\",\"line\":139,\"trace\":[{\"file\":\"E:\\\\L3_MIAGE_S6\\\\tech_web_avancÃ©\\\\Yu-Gi-Oh\\\\vendor\\\\symfony\\\\web-server-bundle\\\\WebServerConfig.php\",\"line\":54,\"function\":\"findBestPort\",\"class\":\"Symfony\\\\Bundle\\\\WebServerBundle\\\\WebServerConfig\",\"type\":\"->\"}],\"count\":1})"} []
[2019-03-24 18:57:30] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::home"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2019-03-24 18:57:30] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2019-03-24 18:57:30] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.password AS password_3, t0.email AS email_4, t0.admin AS admin_5 FROM user t0 WHERE t0.id = ? [1] []
[2019-03-24 18:57:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"anisanis"} []
[2019-03-24 18:57:30] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-03-24 18:57:30] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2cae70"},"request_uri":"http://127.0.0.1:8000/_wdt/2cae70","method":"GET"} []
[2019-03-24 18:57:31] request.INFO: Matched route "deckBuilder". {"route":"deckBuilder","route_parameters":{"_route":"deckBuilder","_controller":"App\\Controller\\DeckBuilderController::createDeck"},"request_uri":"http://127.0.0.1:8000/deckBuilder","method":"GET"} []
[2019-03-24 18:57:31] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2019-03-24 18:57:31] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.password AS password_3, t0.email AS email_4, t0.admin AS admin_5 FROM user t0 WHERE t0.id = ? [1] []
[2019-03-24 18:57:31] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"anisanis"} []
[2019-03-24 18:57:31] doctrine.DEBUG: SELECT t0.id AS id_1, t0.deck_name AS deck_name_2, t0.created_at AS created_at_3, t0.user_id AS user_id_4 FROM deck t0 [] []
[2019-03-24 18:57:31] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-03-24 18:57:32] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"18bab6"},"request_uri":"http://127.0.0.1:8000/_wdt/18bab6","method":"GET"} []
[2019-03-24 18:57:37] request.INFO: Matched route "deckBuilder". {"route":"deckBuilder","route_parameters":{"_route":"deckBuilder","_controller":"App\\Controller\\DeckBuilderController::createDeck"},"request_uri":"http://127.0.0.1:8000/deckBuilder","method":"POST"} []
[2019-03-24 18:57:38] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2019-03-24 18:57:38] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.password AS password_3, t0.email AS email_4, t0.admin AS admin_5 FROM user t0 WHERE t0.id = ? [1] []
[2019-03-24 18:57:38] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"anisanis"} []
[2019-03-24 18:57:38] doctrine.DEBUG: SELECT t0.id AS id_1, t0.deck_name AS deck_name_2, t0.created_at AS created_at_3, t0.user_id AS user_id_4 FROM deck t0 WHERE t0.deck_name = ? ["deck1111"] []
[2019-03-24 18:57:38] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-03-24 18:57:38] doctrine.DEBUG: INSERT INTO deck (deck_name, created_at, user_id) VALUES (?, ?, ?) {"1":"deck1111","2":"2019-03-24 18:57:38","3":1} []
[2019-03-24 18:57:38] doctrine.DEBUG: "COMMIT" [] []
[2019-03-24 18:57:38] doctrine.DEBUG: SELECT t0.id AS id_1, t0.deck_name AS deck_name_2, t0.created_at AS created_at_3, t0.user_id AS user_id_4 FROM deck t0 [] []
[2019-03-24 18:57:38] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-03-24 18:57:38] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"71f8a3"},"request_uri":"http://127.0.0.1:8000/_wdt/71f8a3","method":"GET"} []
